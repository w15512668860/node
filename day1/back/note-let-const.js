/** 
 *  好的代码像粥一样，都是用时间熬出来的
*/

/** 
 *  @param[let]  ： 声明变量
 * 
 *  1. 没有变量提升：
 *  2. 暂时性死区：在代码块内，使用let命令声明变量之前，该变量都是不可用的。
 *     所以在let声明变量前，对变量赋值会报错。
 *  3. 不允许重复声明：
 *  4. 块级作用域
 *  */


 /** 
  * @param[const] ： 声明常量 （只读）
  * 
  * 1. const一旦声明变量，就必须立即初始化，不能留到以后赋值。
  * 2. const的作用域与let命令相同：只在声明所在的块级作用域内有效。
  * 3. const命令声明的常量也是不提升，同样存在暂时性死区，只能在声明的位置后面使用。
  * 4. const声明的常量，也与let一样不可重复声明。
  * 
  * 
  * 常量foo储存的是一个地址，这个地址指向一个对象。
  * 不可变的只是这个地址，即不能把foo指向另一个地址，但对象本身是可变的，所以依然可以为其添加新属性。
  * 
 */

 /** 
  * @param[ES6 声明变量的六种方法:]
  * es5: var function
  * es6: let  const import class
 */


 /**
  * @顶层对象
  * 在浏览器环境指的是window对象，在 Node 指的是global对象。
  */




